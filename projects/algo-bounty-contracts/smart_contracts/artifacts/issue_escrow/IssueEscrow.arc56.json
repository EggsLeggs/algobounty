{
    "name": "IssueEscrow",
    "structs": {},
    "methods": [
        {
            "name": "create_bounty",
            "args": [
                {
                    "type": "string",
                    "name": "issue_id"
                },
                {
                    "type": "uint64",
                    "name": "usdc_asset"
                },
                {
                    "type": "address",
                    "name": "maintainer"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Initialize a new bounty escrow for a GitHub issue",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fund_bounty",
            "args": [
                {
                    "type": "uint64",
                    "name": "amount"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Add USDC to the existing bounty",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "distribute_payout",
            "args": [
                {
                    "type": "address",
                    "name": "contributor"
                },
                {
                    "type": "uint64",
                    "name": "amount"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Distribute USDC to a contributor (only maintainer can call)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "mark_resolved",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Mark the issue as resolved (only maintainer can call)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "refund",
            "args": [
                {
                    "type": "uint64",
                    "name": "amount"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Refund USDC to maintainer (only maintainer can call)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_bounty_info",
            "args": [],
            "returns": {
                "type": "(string,uint64,uint64,address,uint64)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get current bounty information",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "Smart contract for escrowing USDC bounties for GitHub issues",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 2
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "issue_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "aXNzdWVfaWQ="
                },
                "total_bounty": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dG90YWxfYm91bnR5"
                },
                "usdc_asset": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dXNkY19hc3NldA=="
                },
                "maintainer": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "bWFpbnRhaW5lcg=="
                },
                "is_resolved": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aXNfcmVzb2x2ZWQ="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        251
                    ],
                    "errorMessage": "Bounty already resolved"
                },
                {
                    "pc": [
                        321,
                        433
                    ],
                    "errorMessage": "Insufficient bounty funds"
                },
                {
                    "pc": [
                        314
                    ],
                    "errorMessage": "Issue not resolved yet"
                },
                {
                    "pc": [
                        78
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        139
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        307
                    ],
                    "errorMessage": "Only maintainer can distribute"
                },
                {
                    "pc": [
                        371
                    ],
                    "errorMessage": "Only maintainer can mark resolved"
                },
                {
                    "pc": [
                        426
                    ],
                    "errorMessage": "Only maintainer can refund"
                },
                {
                    "pc": [
                        249,
                        311,
                        492
                    ],
                    "errorMessage": "check self.is_resolved exists"
                },
                {
                    "pc": [
                        475
                    ],
                    "errorMessage": "check self.issue_id exists"
                },
                {
                    "pc": [
                        305,
                        369,
                        424,
                        488
                    ],
                    "errorMessage": "check self.maintainer exists"
                },
                {
                    "pc": [
                        255,
                        318,
                        430,
                        479
                    ],
                    "errorMessage": "check self.total_bounty exists"
                },
                {
                    "pc": [
                        484
                    ],
                    "errorMessage": "check self.usdc_asset exists"
                },
                {
                    "pc": [
                        153
                    ],
                    "errorMessage": "invalid number of bytes for (len+utf8[])"
                },
                {
                    "pc": [
                        164,
                        244,
                        298,
                        417
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                },
                {
                    "pc": [
                        173,
                        290
                    ],
                    "errorMessage": "invalid number of bytes for uint8[32]"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAAEIICYGDHRvdGFsX2JvdW50eQptYWludGFpbmVyC2lzX3Jlc29sdmVkCGlzc3VlX2lkCnVzZGNfYXNzZXQEFR98dTEbQQA5MRkURDEYRIIGBP+DdlgElgtuMQQFVoA7BFYayA8EpkDFUgSeDr7yNhoAjgYACQBqAJkA6QEXAVUAMRkUMRgUEEM2GgFJIlmBAghLARUSRFcCADYaAkkVJBJEFzYaA0kVJRJEK0sDZygiZycETwJnKUxnKiJngBpCb3VudHkgY3JlYXRlZCBmb3IgaXNzdWU6IExQSRUWVwYCTFAnBUxQsCNDNhoBSRUkEkQXIiplRBREIihlRAgoTGeAExUffHUADUZ1bmRlZCBib3VudHmwI0M2GgEVJRJENhoCSRUkEkQXMQAiKWVEEkQiKmVEIxJEIihlREoOREwJKExngCAVH3x1ABpEaXN0cmlidXRlZCB0byBjb250cmlidXRvcrAjQzEAIillRBJEKiNngB4VH3x1ABhJc3N1ZSBtYXJrZWQgYXMgcmVzb2x2ZWSwI0M2GgFJFSQSRBcxACIpZUQSRCIoZURKDkRMCShMZ4AcFR98dQAWUmVmdW5kZWQgdG8gbWFpbnRhaW5lcrAjQyIrZUQiKGVEIicEZUQiKWVEIiplREsEFRZXBgJPBVBPBBaAAgA6TFBPBBZQTwNQTwIWUExQJwVMULAjQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 2,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}