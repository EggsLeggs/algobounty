# GitHub App Configuration
# Get these values from your GitHub App settings
GITHUB_APP_ID=your_app_id
GITHUB_APP_CLIENT_ID=your_client_id
GITHUB_APP_CLIENT_SECRET=your_client_secret
GITHUB_APP_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----\nYour private key content here\n-----END RSA PRIVATE KEY-----"
GITHUB_WEBHOOK_SECRET=your_webhook_secret

# Attestor Configuration
# Ed25519 private key for signing attestations (base64 encoded)
# Generate with: node -e "console.log(require('tweetnacl').sign.keyPair().secretKey.toString('base64'))"
ATTESTOR_PRIVATE_KEY=your_ed25519_private_key_base64

# Smart Contract Configuration
# Application ID of the deployed GitHub Linker contract
SMART_CONTRACT_APP_ID=0
# Application address of the deployed contract
SMART_CONTRACT_APP_ADDRESS=your_contract_app_address
# Backend private key for submitting transactions (base64 encoded)
BACKEND_PRIVATE_KEY=your_backend_private_key_base64

# Algorand Configuration
# Algorand node server URL (for testnet: https://testnet-api.algonode.cloud)
NEXT_PUBLIC_ALGOD_SERVER=http://localhost:4001
# Algorand node API token (empty for public nodes)
NEXT_PUBLIC_ALGOD_TOKEN=

# App URLs
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_GITHUB_APP_INSTALL_URL=https://github.com/apps/your-app-name/installations/new

# MongoDB Configuration (Development)
MONGODB_URI=mongodb://admin:password@localhost:27017/algo_bounty?authSource=admin

# Instructions:
# 1. Copy this file to .env.local
# 2. Replace all placeholder values with your actual GitHub App credentials
# 3. For GITHUB_APP_PRIVATE_KEY, paste the entire private key including the header and footer
# 4. Make sure to keep the quotes around the private key value
# 5. For OAuth flow, you need GITHUB_APP_CLIENT_ID and GITHUB_APP_CLIENT_SECRET
# 6. Set the OAuth callback URL in your GitHub App settings to: http://localhost:3000/api/auth/github/callback
# 7. Generate an Ed25519 keypair for attestations and set ATTESTOR_PRIVATE_KEY
